name: Build LLVM for arm64
on:
  watch:
    types: [started]

  workflow_dispatch:

jobs:
  build:
    name: Build Toolchain by ${{ github.actor }}
    runs-on: ubuntu-22.04-arm
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      CI: "false"
    steps:
    - uses: actions/checkout@v4
    - name: Prepare Configuration
      run: |
        echo "ENABLE_NETHUNTER=$(cat $CONFIG_ENV | grep -w "ENABLE_NETHUNTER" | head -n 1 | cut -d "=" -f 2)" >> $GITHUB_ENV
        
    - name: Set swap to 10G
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Setup build environment
      run: |
        echo "BUILD_TIME=$(TZ=Asia/Shanghai date "+%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "DEVICE=$(echo ${{ env.KERNEL_CONFIG }} | sed 's!vendor/!!;s/_defconfig//;s/_user//;s/-perf//')" >> $GITHUB_ENV
        sudo apt-get remove containerd.io -y
        sudo apt-get update
        sudo apt install -y bc \
            binutils-dev \
            bison \
            build-essential \
            ca-certificates \
            ccache \
            clang \
            cmake \
            curl \
            file \
            flex \
            git \
            libelf-dev \
            libssl-dev \
            libstdc++-$(apt list libstdc++6 2>/dev/null | grep -Eos '[0-9]+\.[0-9]+\.[0-9]+' | head -1 | cut -d . -f 1)-dev \
            lld \
            make \
            ninja-build \
            python3-dev \
            texinfo \
            u-boot-tools \
            xz-utils \
            zlib1g-dev
         sudo apt install -y pixz git libssl-dev gcc-arm-linux-gnueabi build-essential libncurses5-dev bzip2 make gcc g++ grep bc curl bison flex openssl lzop ccache unzip zlib1g-dev texinfo file ca-certificates ccache wget cmake texinfo zlib1g-dev xz-utils libelf-dev zip libgmp-dev xz-utils libncurses-dev g++ gawk m4 libtinfo5 cpio binutils-dev libelf-dev cmake texinfo python3
         mkdir -p $GITHUB_WORKSPACE/kernel_workspace

  

    - name: build toolchain
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace
        wget https://raw.githubusercontent.com/tomxi1997/builder-docker/main/llvm/build-electron-binutils.sh
        chmod +x *.sh
        sudo ./build-electron-binutils.sh
        cd $GITHUB_WORKSPACE/kernel_workspace
        git clone https://github.com/ClangBuiltLinux/tc-build
        cd tc-build
        chmod +x *.py
        ./build-binutils.py --targets arm aarch64 -i $GITHUB_WORKSPACE/kernel_workspace/toolchain
        sudo ./build-llvm.py -t AArch64 ARM --vendor-string "Electron" -i $GITHUB_WORKSPACE/kernel_workspace/toolchain
        
          
        

    
    - name: add toolchain tar
      run: |
        cd $GITHUB_WORKSPACE/kernel_workspace/
        XZ_OPT="-9" tar --warning=no-file-changed -cJf toolchain.tar.xz toolchain
        

    - name: Upload toolchain
      uses: actions/upload-artifact@v4
      with:
        name: toolchain-arm64-ubuntu22.04
        path: kernel_workspace/toolchain.tar.xz

  
